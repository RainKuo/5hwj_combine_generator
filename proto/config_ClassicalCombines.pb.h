// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/config_ClassicalCombines.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fconfig_5fClassicalCombines_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fconfig_5fClassicalCombines_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fconfig_5fClassicalCombines_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fconfig_5fClassicalCombines_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fconfig_5fClassicalCombines_2eproto;
namespace ClassicalCombines {
namespace pb {
class Config;
struct ConfigDefaultTypeInternal;
extern ConfigDefaultTypeInternal _Config_default_instance_;
class classical_base_combine;
struct classical_base_combineDefaultTypeInternal;
extern classical_base_combineDefaultTypeInternal _classical_base_combine_default_instance_;
class classical_combine_config;
struct classical_combine_configDefaultTypeInternal;
extern classical_combine_configDefaultTypeInternal _classical_combine_config_default_instance_;
}  // namespace pb
}  // namespace ClassicalCombines
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ClassicalCombines {
namespace pb {
enum RivalType : int {
  NORMAL_RIVAL_ = 0,
  NORMAL_NO_RIVAL_ = 1,
  RARE_RIVAL_ = 2,
  RARE_NO_RIVAL_ = 3,
  RivalType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  RivalType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool RivalType_IsValid(int value);
constexpr RivalType RivalType_MIN = static_cast<RivalType>(0);
constexpr RivalType RivalType_MAX = static_cast<RivalType>(3);
constexpr int RivalType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
RivalType_descriptor();
template <typename T>
const std::string& RivalType_Name(T value) {
  static_assert(std::is_same<T, RivalType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to RivalType_Name().");
  return RivalType_Name(static_cast<RivalType>(value));
}
template <>
inline const std::string& RivalType_Name(RivalType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<RivalType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool RivalType_Parse(absl::string_view name, RivalType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RivalType>(
      RivalType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class classical_combine_config final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ClassicalCombines.pb.classical_combine_config) */ {
 public:
  inline classical_combine_config() : classical_combine_config(nullptr) {}
  ~classical_combine_config() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR classical_combine_config(::google::protobuf::internal::ConstantInitialized);

  classical_combine_config(const classical_combine_config& from);
  classical_combine_config(classical_combine_config&& from) noexcept
    : classical_combine_config() {
    *this = ::std::move(from);
  }

  inline classical_combine_config& operator=(const classical_combine_config& from) {
    CopyFrom(from);
    return *this;
  }
  inline classical_combine_config& operator=(classical_combine_config&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const classical_combine_config& default_instance() {
    return *internal_default_instance();
  }
  static inline const classical_combine_config* internal_default_instance() {
    return reinterpret_cast<const classical_combine_config*>(
               &_classical_combine_config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(classical_combine_config& a, classical_combine_config& b) {
    a.Swap(&b);
  }
  inline void Swap(classical_combine_config* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(classical_combine_config* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  classical_combine_config* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<classical_combine_config>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const classical_combine_config& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const classical_combine_config& from) {
    classical_combine_config::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(classical_combine_config* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ClassicalCombines.pb.classical_combine_config";
  }
  protected:
  explicit classical_combine_config(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIDFieldNumber = 1,
    kControlFlagFieldNumber = 2,
    kCombine0FieldNumber = 4,
    kCombine1FieldNumber = 5,
    kRivalTypeFieldNumber = 3,
    kRemainBigCountFieldNumber = 7,
    kCombine2FieldNumber = 6,
  };
  // uint32 ID = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // uint32 ControlFlag = 2;
  void clear_controlflag() ;
  ::uint32_t controlflag() const;
  void set_controlflag(::uint32_t value);

  private:
  ::uint32_t _internal_controlflag() const;
  void _internal_set_controlflag(::uint32_t value);

  public:
  // uint64 Combine0 = 4;
  void clear_combine0() ;
  ::uint64_t combine0() const;
  void set_combine0(::uint64_t value);

  private:
  ::uint64_t _internal_combine0() const;
  void _internal_set_combine0(::uint64_t value);

  public:
  // uint64 Combine1 = 5;
  void clear_combine1() ;
  ::uint64_t combine1() const;
  void set_combine1(::uint64_t value);

  private:
  ::uint64_t _internal_combine1() const;
  void _internal_set_combine1(::uint64_t value);

  public:
  // uint32 RivalType = 3;
  void clear_rivaltype() ;
  ::uint32_t rivaltype() const;
  void set_rivaltype(::uint32_t value);

  private:
  ::uint32_t _internal_rivaltype() const;
  void _internal_set_rivaltype(::uint32_t value);

  public:
  // uint32 RemainBigCount = 7;
  void clear_remainbigcount() ;
  ::uint32_t remainbigcount() const;
  void set_remainbigcount(::uint32_t value);

  private:
  ::uint32_t _internal_remainbigcount() const;
  void _internal_set_remainbigcount(::uint32_t value);

  public:
  // uint64 Combine2 = 6;
  void clear_combine2() ;
  ::uint64_t combine2() const;
  void set_combine2(::uint64_t value);

  private:
  ::uint64_t _internal_combine2() const;
  void _internal_set_combine2(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:ClassicalCombines.pb.classical_combine_config)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t id_;
    ::uint32_t controlflag_;
    ::uint64_t combine0_;
    ::uint64_t combine1_;
    ::uint32_t rivaltype_;
    ::uint32_t remainbigcount_;
    ::uint64_t combine2_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fconfig_5fClassicalCombines_2eproto;
};// -------------------------------------------------------------------

class classical_base_combine final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ClassicalCombines.pb.classical_base_combine) */ {
 public:
  inline classical_base_combine() : classical_base_combine(nullptr) {}
  ~classical_base_combine() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR classical_base_combine(::google::protobuf::internal::ConstantInitialized);

  classical_base_combine(const classical_base_combine& from);
  classical_base_combine(classical_base_combine&& from) noexcept
    : classical_base_combine() {
    *this = ::std::move(from);
  }

  inline classical_base_combine& operator=(const classical_base_combine& from) {
    CopyFrom(from);
    return *this;
  }
  inline classical_base_combine& operator=(classical_base_combine&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const classical_base_combine& default_instance() {
    return *internal_default_instance();
  }
  static inline const classical_base_combine* internal_default_instance() {
    return reinterpret_cast<const classical_base_combine*>(
               &_classical_base_combine_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(classical_base_combine& a, classical_base_combine& b) {
    a.Swap(&b);
  }
  inline void Swap(classical_base_combine* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(classical_base_combine* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  classical_base_combine* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<classical_base_combine>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const classical_base_combine& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const classical_base_combine& from) {
    classical_base_combine::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(classical_base_combine* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ClassicalCombines.pb.classical_base_combine";
  }
  protected:
  explicit classical_base_combine(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBigCountFieldNumber = 1,
    kBombCountFieldNumber = 2,
    kTripleCountFieldNumber = 3,
    kPairCountFieldNumber = 4,
    kSingleCountFieldNumber = 5,
  };
  // uint32 BigCount = 1;
  void clear_bigcount() ;
  ::uint32_t bigcount() const;
  void set_bigcount(::uint32_t value);

  private:
  ::uint32_t _internal_bigcount() const;
  void _internal_set_bigcount(::uint32_t value);

  public:
  // uint32 BombCount = 2;
  void clear_bombcount() ;
  ::uint32_t bombcount() const;
  void set_bombcount(::uint32_t value);

  private:
  ::uint32_t _internal_bombcount() const;
  void _internal_set_bombcount(::uint32_t value);

  public:
  // uint32 TripleCount = 3;
  void clear_triplecount() ;
  ::uint32_t triplecount() const;
  void set_triplecount(::uint32_t value);

  private:
  ::uint32_t _internal_triplecount() const;
  void _internal_set_triplecount(::uint32_t value);

  public:
  // uint32 PairCount = 4;
  void clear_paircount() ;
  ::uint32_t paircount() const;
  void set_paircount(::uint32_t value);

  private:
  ::uint32_t _internal_paircount() const;
  void _internal_set_paircount(::uint32_t value);

  public:
  // uint32 SingleCount = 5;
  void clear_singlecount() ;
  ::uint32_t singlecount() const;
  void set_singlecount(::uint32_t value);

  private:
  ::uint32_t _internal_singlecount() const;
  void _internal_set_singlecount(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ClassicalCombines.pb.classical_base_combine)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t bigcount_;
    ::uint32_t bombcount_;
    ::uint32_t triplecount_;
    ::uint32_t paircount_;
    ::uint32_t singlecount_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fconfig_5fClassicalCombines_2eproto;
};// -------------------------------------------------------------------

class Config final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ClassicalCombines.pb.Config) */ {
 public:
  inline Config() : Config(nullptr) {}
  ~Config() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Config(::google::protobuf::internal::ConstantInitialized);

  Config(const Config& from);
  Config(Config&& from) noexcept
    : Config() {
    *this = ::std::move(from);
  }

  inline Config& operator=(const Config& from) {
    CopyFrom(from);
    return *this;
  }
  inline Config& operator=(Config&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Config& default_instance() {
    return *internal_default_instance();
  }
  static inline const Config* internal_default_instance() {
    return reinterpret_cast<const Config*>(
               &_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Config& a, Config& b) {
    a.Swap(&b);
  }
  inline void Swap(Config* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Config* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Config* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Config>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Config& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Config& from) {
    Config::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Config* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ClassicalCombines.pb.Config";
  }
  protected:
  explicit Config(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigsFieldNumber = 1,
    kBaseConfigsFieldNumber = 2,
  };
  // repeated .ClassicalCombines.pb.classical_combine_config configs = 1;
  int configs_size() const;
  private:
  int _internal_configs_size() const;

  public:
  void clear_configs() ;
  ::ClassicalCombines::pb::classical_combine_config* mutable_configs(int index);
  ::google::protobuf::RepeatedPtrField< ::ClassicalCombines::pb::classical_combine_config >*
      mutable_configs();
  private:
  const ::google::protobuf::RepeatedPtrField<::ClassicalCombines::pb::classical_combine_config>& _internal_configs() const;
  ::google::protobuf::RepeatedPtrField<::ClassicalCombines::pb::classical_combine_config>* _internal_mutable_configs();
  public:
  const ::ClassicalCombines::pb::classical_combine_config& configs(int index) const;
  ::ClassicalCombines::pb::classical_combine_config* add_configs();
  const ::google::protobuf::RepeatedPtrField< ::ClassicalCombines::pb::classical_combine_config >&
      configs() const;
  // repeated .ClassicalCombines.pb.classical_base_combine base_configs = 2;
  int base_configs_size() const;
  private:
  int _internal_base_configs_size() const;

  public:
  void clear_base_configs() ;
  ::ClassicalCombines::pb::classical_base_combine* mutable_base_configs(int index);
  ::google::protobuf::RepeatedPtrField< ::ClassicalCombines::pb::classical_base_combine >*
      mutable_base_configs();
  private:
  const ::google::protobuf::RepeatedPtrField<::ClassicalCombines::pb::classical_base_combine>& _internal_base_configs() const;
  ::google::protobuf::RepeatedPtrField<::ClassicalCombines::pb::classical_base_combine>* _internal_mutable_base_configs();
  public:
  const ::ClassicalCombines::pb::classical_base_combine& base_configs(int index) const;
  ::ClassicalCombines::pb::classical_base_combine* add_base_configs();
  const ::google::protobuf::RepeatedPtrField< ::ClassicalCombines::pb::classical_base_combine >&
      base_configs() const;
  // @@protoc_insertion_point(class_scope:ClassicalCombines.pb.Config)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::ClassicalCombines::pb::classical_combine_config > configs_;
    ::google::protobuf::RepeatedPtrField< ::ClassicalCombines::pb::classical_base_combine > base_configs_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fconfig_5fClassicalCombines_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// classical_combine_config

// uint32 ID = 1;
inline void classical_combine_config::clear_id() {
  _impl_.id_ = 0u;
}
inline ::uint32_t classical_combine_config::id() const {
  // @@protoc_insertion_point(field_get:ClassicalCombines.pb.classical_combine_config.ID)
  return _internal_id();
}
inline void classical_combine_config::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:ClassicalCombines.pb.classical_combine_config.ID)
}
inline ::uint32_t classical_combine_config::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void classical_combine_config::_internal_set_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// uint32 ControlFlag = 2;
inline void classical_combine_config::clear_controlflag() {
  _impl_.controlflag_ = 0u;
}
inline ::uint32_t classical_combine_config::controlflag() const {
  // @@protoc_insertion_point(field_get:ClassicalCombines.pb.classical_combine_config.ControlFlag)
  return _internal_controlflag();
}
inline void classical_combine_config::set_controlflag(::uint32_t value) {
  _internal_set_controlflag(value);
  // @@protoc_insertion_point(field_set:ClassicalCombines.pb.classical_combine_config.ControlFlag)
}
inline ::uint32_t classical_combine_config::_internal_controlflag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.controlflag_;
}
inline void classical_combine_config::_internal_set_controlflag(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.controlflag_ = value;
}

// uint32 RivalType = 3;
inline void classical_combine_config::clear_rivaltype() {
  _impl_.rivaltype_ = 0u;
}
inline ::uint32_t classical_combine_config::rivaltype() const {
  // @@protoc_insertion_point(field_get:ClassicalCombines.pb.classical_combine_config.RivalType)
  return _internal_rivaltype();
}
inline void classical_combine_config::set_rivaltype(::uint32_t value) {
  _internal_set_rivaltype(value);
  // @@protoc_insertion_point(field_set:ClassicalCombines.pb.classical_combine_config.RivalType)
}
inline ::uint32_t classical_combine_config::_internal_rivaltype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rivaltype_;
}
inline void classical_combine_config::_internal_set_rivaltype(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rivaltype_ = value;
}

// uint64 Combine0 = 4;
inline void classical_combine_config::clear_combine0() {
  _impl_.combine0_ = ::uint64_t{0u};
}
inline ::uint64_t classical_combine_config::combine0() const {
  // @@protoc_insertion_point(field_get:ClassicalCombines.pb.classical_combine_config.Combine0)
  return _internal_combine0();
}
inline void classical_combine_config::set_combine0(::uint64_t value) {
  _internal_set_combine0(value);
  // @@protoc_insertion_point(field_set:ClassicalCombines.pb.classical_combine_config.Combine0)
}
inline ::uint64_t classical_combine_config::_internal_combine0() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.combine0_;
}
inline void classical_combine_config::_internal_set_combine0(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.combine0_ = value;
}

// uint64 Combine1 = 5;
inline void classical_combine_config::clear_combine1() {
  _impl_.combine1_ = ::uint64_t{0u};
}
inline ::uint64_t classical_combine_config::combine1() const {
  // @@protoc_insertion_point(field_get:ClassicalCombines.pb.classical_combine_config.Combine1)
  return _internal_combine1();
}
inline void classical_combine_config::set_combine1(::uint64_t value) {
  _internal_set_combine1(value);
  // @@protoc_insertion_point(field_set:ClassicalCombines.pb.classical_combine_config.Combine1)
}
inline ::uint64_t classical_combine_config::_internal_combine1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.combine1_;
}
inline void classical_combine_config::_internal_set_combine1(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.combine1_ = value;
}

// uint64 Combine2 = 6;
inline void classical_combine_config::clear_combine2() {
  _impl_.combine2_ = ::uint64_t{0u};
}
inline ::uint64_t classical_combine_config::combine2() const {
  // @@protoc_insertion_point(field_get:ClassicalCombines.pb.classical_combine_config.Combine2)
  return _internal_combine2();
}
inline void classical_combine_config::set_combine2(::uint64_t value) {
  _internal_set_combine2(value);
  // @@protoc_insertion_point(field_set:ClassicalCombines.pb.classical_combine_config.Combine2)
}
inline ::uint64_t classical_combine_config::_internal_combine2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.combine2_;
}
inline void classical_combine_config::_internal_set_combine2(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.combine2_ = value;
}

// uint32 RemainBigCount = 7;
inline void classical_combine_config::clear_remainbigcount() {
  _impl_.remainbigcount_ = 0u;
}
inline ::uint32_t classical_combine_config::remainbigcount() const {
  // @@protoc_insertion_point(field_get:ClassicalCombines.pb.classical_combine_config.RemainBigCount)
  return _internal_remainbigcount();
}
inline void classical_combine_config::set_remainbigcount(::uint32_t value) {
  _internal_set_remainbigcount(value);
  // @@protoc_insertion_point(field_set:ClassicalCombines.pb.classical_combine_config.RemainBigCount)
}
inline ::uint32_t classical_combine_config::_internal_remainbigcount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.remainbigcount_;
}
inline void classical_combine_config::_internal_set_remainbigcount(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.remainbigcount_ = value;
}

// -------------------------------------------------------------------

// classical_base_combine

// uint32 BigCount = 1;
inline void classical_base_combine::clear_bigcount() {
  _impl_.bigcount_ = 0u;
}
inline ::uint32_t classical_base_combine::bigcount() const {
  // @@protoc_insertion_point(field_get:ClassicalCombines.pb.classical_base_combine.BigCount)
  return _internal_bigcount();
}
inline void classical_base_combine::set_bigcount(::uint32_t value) {
  _internal_set_bigcount(value);
  // @@protoc_insertion_point(field_set:ClassicalCombines.pb.classical_base_combine.BigCount)
}
inline ::uint32_t classical_base_combine::_internal_bigcount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bigcount_;
}
inline void classical_base_combine::_internal_set_bigcount(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bigcount_ = value;
}

// uint32 BombCount = 2;
inline void classical_base_combine::clear_bombcount() {
  _impl_.bombcount_ = 0u;
}
inline ::uint32_t classical_base_combine::bombcount() const {
  // @@protoc_insertion_point(field_get:ClassicalCombines.pb.classical_base_combine.BombCount)
  return _internal_bombcount();
}
inline void classical_base_combine::set_bombcount(::uint32_t value) {
  _internal_set_bombcount(value);
  // @@protoc_insertion_point(field_set:ClassicalCombines.pb.classical_base_combine.BombCount)
}
inline ::uint32_t classical_base_combine::_internal_bombcount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bombcount_;
}
inline void classical_base_combine::_internal_set_bombcount(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bombcount_ = value;
}

// uint32 TripleCount = 3;
inline void classical_base_combine::clear_triplecount() {
  _impl_.triplecount_ = 0u;
}
inline ::uint32_t classical_base_combine::triplecount() const {
  // @@protoc_insertion_point(field_get:ClassicalCombines.pb.classical_base_combine.TripleCount)
  return _internal_triplecount();
}
inline void classical_base_combine::set_triplecount(::uint32_t value) {
  _internal_set_triplecount(value);
  // @@protoc_insertion_point(field_set:ClassicalCombines.pb.classical_base_combine.TripleCount)
}
inline ::uint32_t classical_base_combine::_internal_triplecount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.triplecount_;
}
inline void classical_base_combine::_internal_set_triplecount(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.triplecount_ = value;
}

// uint32 PairCount = 4;
inline void classical_base_combine::clear_paircount() {
  _impl_.paircount_ = 0u;
}
inline ::uint32_t classical_base_combine::paircount() const {
  // @@protoc_insertion_point(field_get:ClassicalCombines.pb.classical_base_combine.PairCount)
  return _internal_paircount();
}
inline void classical_base_combine::set_paircount(::uint32_t value) {
  _internal_set_paircount(value);
  // @@protoc_insertion_point(field_set:ClassicalCombines.pb.classical_base_combine.PairCount)
}
inline ::uint32_t classical_base_combine::_internal_paircount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.paircount_;
}
inline void classical_base_combine::_internal_set_paircount(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.paircount_ = value;
}

// uint32 SingleCount = 5;
inline void classical_base_combine::clear_singlecount() {
  _impl_.singlecount_ = 0u;
}
inline ::uint32_t classical_base_combine::singlecount() const {
  // @@protoc_insertion_point(field_get:ClassicalCombines.pb.classical_base_combine.SingleCount)
  return _internal_singlecount();
}
inline void classical_base_combine::set_singlecount(::uint32_t value) {
  _internal_set_singlecount(value);
  // @@protoc_insertion_point(field_set:ClassicalCombines.pb.classical_base_combine.SingleCount)
}
inline ::uint32_t classical_base_combine::_internal_singlecount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.singlecount_;
}
inline void classical_base_combine::_internal_set_singlecount(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.singlecount_ = value;
}

// -------------------------------------------------------------------

// Config

// repeated .ClassicalCombines.pb.classical_combine_config configs = 1;
inline int Config::_internal_configs_size() const {
  return _internal_configs().size();
}
inline int Config::configs_size() const {
  return _internal_configs_size();
}
inline void Config::clear_configs() {
  _internal_mutable_configs()->Clear();
}
inline ::ClassicalCombines::pb::classical_combine_config* Config::mutable_configs(int index) {
  // @@protoc_insertion_point(field_mutable:ClassicalCombines.pb.Config.configs)
  return _internal_mutable_configs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ClassicalCombines::pb::classical_combine_config >*
Config::mutable_configs() {
  // @@protoc_insertion_point(field_mutable_list:ClassicalCombines.pb.Config.configs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_configs();
}
inline const ::ClassicalCombines::pb::classical_combine_config& Config::configs(int index) const {
  // @@protoc_insertion_point(field_get:ClassicalCombines.pb.Config.configs)
    return _internal_configs().Get(index);
}
inline ::ClassicalCombines::pb::classical_combine_config* Config::add_configs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::ClassicalCombines::pb::classical_combine_config* _add = _internal_mutable_configs()->Add();
  // @@protoc_insertion_point(field_add:ClassicalCombines.pb.Config.configs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::ClassicalCombines::pb::classical_combine_config >&
Config::configs() const {
  // @@protoc_insertion_point(field_list:ClassicalCombines.pb.Config.configs)
  return _internal_configs();
}
inline const ::google::protobuf::RepeatedPtrField<::ClassicalCombines::pb::classical_combine_config>&
Config::_internal_configs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.configs_;
}
inline ::google::protobuf::RepeatedPtrField<::ClassicalCombines::pb::classical_combine_config>*
Config::_internal_mutable_configs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.configs_;
}

// repeated .ClassicalCombines.pb.classical_base_combine base_configs = 2;
inline int Config::_internal_base_configs_size() const {
  return _internal_base_configs().size();
}
inline int Config::base_configs_size() const {
  return _internal_base_configs_size();
}
inline void Config::clear_base_configs() {
  _internal_mutable_base_configs()->Clear();
}
inline ::ClassicalCombines::pb::classical_base_combine* Config::mutable_base_configs(int index) {
  // @@protoc_insertion_point(field_mutable:ClassicalCombines.pb.Config.base_configs)
  return _internal_mutable_base_configs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ClassicalCombines::pb::classical_base_combine >*
Config::mutable_base_configs() {
  // @@protoc_insertion_point(field_mutable_list:ClassicalCombines.pb.Config.base_configs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_base_configs();
}
inline const ::ClassicalCombines::pb::classical_base_combine& Config::base_configs(int index) const {
  // @@protoc_insertion_point(field_get:ClassicalCombines.pb.Config.base_configs)
    return _internal_base_configs().Get(index);
}
inline ::ClassicalCombines::pb::classical_base_combine* Config::add_base_configs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::ClassicalCombines::pb::classical_base_combine* _add = _internal_mutable_base_configs()->Add();
  // @@protoc_insertion_point(field_add:ClassicalCombines.pb.Config.base_configs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::ClassicalCombines::pb::classical_base_combine >&
Config::base_configs() const {
  // @@protoc_insertion_point(field_list:ClassicalCombines.pb.Config.base_configs)
  return _internal_base_configs();
}
inline const ::google::protobuf::RepeatedPtrField<::ClassicalCombines::pb::classical_base_combine>&
Config::_internal_base_configs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.base_configs_;
}
inline ::google::protobuf::RepeatedPtrField<::ClassicalCombines::pb::classical_base_combine>*
Config::_internal_mutable_base_configs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.base_configs_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
}  // namespace ClassicalCombines


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ClassicalCombines::pb::RivalType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ClassicalCombines::pb::RivalType>() {
  return ::ClassicalCombines::pb::RivalType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_proto_2fconfig_5fClassicalCombines_2eproto_2epb_2eh
